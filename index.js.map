{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n//https://pixabay.com/api/\n\n//let query; //user's search by word;\nexport const API_KEY = '47332202-20d723453e83dbf57917d8670';\n\nexport function fetchImages(query) {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n  const url = `https://pixabay.com/api/?${params}`;\n\n  return fetch(url).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    //console.log(res.statusText);\n    return res.json();\n  });\n}\n","import { cardContainer } from '../main.js';\n\nexport function createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `\n        <li class=\"img-card\">\n          <div class=\"img-img\">\n            <a class=\"gallery-link\" href=\"${largeImageURL}\">\n              <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n            </a>\n          </div>\n          <div class=\"img-info\">\n            <ul class=\"img-info-list\">\n              <li><h3>Likes</h3><p>${likes}</p></li>\n              <li><h3>Views</h3><p>${views}</p></li>\n              <li><h3>Comments</h3><p>${comments}</p></li>\n              <li><h3>Downloads</h3><p>${downloads}</p></li>\n            </ul>\n          </div>\n        </li>\n      `\n    )\n    .join('');\n}\n\n/**\n * @param {HTMLElement} cardContainer - The container element to render into.\n * @param {string} markup - The HTML markup to render.\n */\nexport function renderMarkup(cardContainer, markup) {\n  cardContainer.innerHTML = markup;\n}\n\n//Clears the image cards container:\n// @param {HTMLElement} cardContainer - The container element to clear.\nexport function clearCardContainer(cardContainer) {\n  cardContainer.innerHTML = '';\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\niziToast.settings({\n  position: 'topRight',\n});\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { fetchImages } from './js/pixabay-api.js';\nimport {\n  createMarkup,\n  renderMarkup,\n  clearCardContainer,\n} from './js/render-functions.js';\n\nconst form = document.querySelector('.js-search-form');\nconst qInput = document.querySelector('#query');\nconst loader = document.getElementById('loader');\nconst cardContainer = document.querySelector('.image-cards');\nexport { cardContainer };\nlet query;\nconst lightbox = new SimpleLightbox('.image-cards a');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  clearCardContainer(cardContainer);\n  query = qInput.value.trim();\n\n  if (!query) {\n    iziToast.warning({\n      title: 'Error',\n      message: 'Please enter a searched word',\n    });\n    return;\n  }\n\n  //console.log('Submitted query:', query);\n\n  // Show loader\n  loader.classList.remove('disabled');\n  //console.log('Loader active:', loader.classList);\n\n  fetchImages(query)\n    .then(data => {\n      //console.log('API Data:', data);\n\n      if (data.hits.length === 0) {\n        iziToast.warning({\n          title: 'No Results',\n          message: 'No images found for your query.',\n        });\n        clearCardContainer(cardContainer); // Clear the cardContainer if no results\n        return;\n      }\n\n      const markup = createMarkup(data.hits);\n      renderMarkup(cardContainer, markup); // Render markup into the list\n\n      lightbox.refresh(); // Refresh lightbox for new elements\n    })\n    .catch(error => {\n      console.error('Error fetching images:', error);\n      iziToast.error({\n        title: 'Error',\n        message: `Failed to fetch images: ${error.message}`,\n      });\n    })\n    .finally(() => {\n      // Hide loader\n      loader.classList.add('disabled');\n      //console.log('Loader disabled:', loader.classList);\n    });\n});\n"],"names":["API_KEY","fetchImages","query","url","res","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","renderMarkup","cardContainer","markup","clearCardContainer","iziToast","form","qInput","loader","lightbox","SimpleLightbox","event","data","error"],"mappings":"iyBAKO,MAAMA,EAAU,qCAEhB,SAASC,EAAYC,EAAO,CAQjC,MAAMC,EAAM,4BAPG,IAAI,gBAAgB,CACjC,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,CAC6C,GAE9C,OAAO,MAAMC,CAAG,EAAE,KAAKC,GAAO,CAC5B,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,UAAU,EAGhC,OAAOA,EAAI,MACf,CAAG,CACH,CCtBO,SAASC,EAAaC,EAAK,CAChC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA;AAAA;AAAA,4CAGoCL,CAAa;AAAA,gDACTD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,qCAKrCC,CAAK;AAAA,qCACLC,CAAK;AAAA,wCACFC,CAAQ;AAAA,yCACPC,CAAS;AAAA;AAAA;AAAA;AAAA,OAK7C,EACA,KAAK,EAAE,CACZ,CAMO,SAASC,EAAaC,EAAeC,EAAQ,CAClDD,EAAc,UAAYC,CAC5B,CAIO,SAASC,EAAmBF,EAAe,CAChDA,EAAc,UAAY,EAC5B,CC7CAG,EAAS,SAAS,CAChB,SAAU,UACZ,CAAC,EAYD,MAAMC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAS,SAAS,eAAe,QAAQ,EACzCN,EAAgB,SAAS,cAAc,cAAc,EAE3D,IAAIb,EACJ,MAAMoB,EAAW,IAAIC,EAAe,gBAAgB,EAEpDJ,EAAK,iBAAiB,SAAUK,GAAS,CAKvC,GAJAA,EAAM,eAAc,EACpBP,EAAmBF,CAAa,EAChCb,EAAQkB,EAAO,MAAM,OAEjB,CAAClB,EAAO,CACVgB,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,8BACf,CAAK,EACD,MACD,CAKDG,EAAO,UAAU,OAAO,UAAU,EAGlCpB,EAAYC,CAAK,EACd,KAAKuB,GAAQ,CAGZ,GAAIA,EAAK,KAAK,SAAW,EAAG,CAC1BP,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,iCACnB,CAAS,EACDD,EAAmBF,CAAa,EAChC,MACD,CAED,MAAMC,EAASX,EAAaoB,EAAK,IAAI,EACrCX,EAAaC,EAAeC,CAAM,EAElCM,EAAS,QAAO,CACtB,CAAK,EACA,MAAMI,GAAS,CACd,QAAQ,MAAM,yBAA0BA,CAAK,EAC7CR,EAAS,MAAM,CACb,MAAO,QACP,QAAS,2BAA2BQ,EAAM,OAAO,EACzD,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CAEbL,EAAO,UAAU,IAAI,UAAU,CAErC,CAAK,CACL,CAAC"}